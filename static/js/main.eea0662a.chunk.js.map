{"version":3,"sources":["components/App/AbiItem/AbiItem.tsx","utils/abi.ts","utils/general.ts","components/App/App.tsx","utils/hooks.ts","index.tsx"],"names":["Keyword","children","className","Type","Name","ArgType","ArgName","ArgsList","argsList","map","input","i","type","name","length","AbiFunctionItem","abiItem","inputs","constant","stateMutability","outputs","AbiEventItem","AbiItem","API_KEY","NULL_ADDRESS","getAbi","address","network","console","log","url","fetch","res","json","data","status","Error","result","abi","JSON","parse","sort","a","b","localeCompare","getImplementation","implementation","Promise","setTimeout","logAbi","filter","window","ethereum","request","method","params","substr","error","_abi","forEach","id","Web3EthAbi","encodeFunctionSignature","push","BLOCK_EXPLORER_URL","getEtherscanLink","hash","App","inputEl","useRef","useState","setAbi","checks","setChecks","func","deps","loading","setLoading","setError","action","useCallback","catch","err","message","finally","useActionWithLoading","current","value","RegExp","test","Array","submit","toggle","_checks","toggleSpecial","changer","selectAll","deselectAll","selectAllFunctions","copyAbi","checked","navigator","clipboard","writeText","stringify","ref","size","placeholder","autoFocus","onClick","href","target","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.eea0662a.chunk.js","sourcesContent":["import React from 'react';\n\nimport './AbiItem.scss';\nimport {AbiDefinition, DataItem, EventAbi, MethodAbi} from \"ethereum-types\";\n\nconst Keyword = ({children}: { children: any }) => <span className=\"keyword\">{children}</span>;\n\nconst Type = ({children}: { children: any }) => <span className=\"type\">{children}</span>;\nconst Name = ({children}: { children: any }) => <span className=\"name\">{children}</span>;\n\nconst ArgType = ({children}: { children: any }) => <span className=\"argtype\">{children}</span>;\nconst ArgName = ({children}: { children: any }) => <span className=\"argname\">{children}</span>;\n\nconst ArgsList = ({argsList}: { argsList: DataItem[] }) => <>\n    {argsList.map((input, i) => (\n        <>\n            <ArgType>{input.type}</ArgType>\n            {input.name && <ArgName> {input.name}</ArgName>}\n            {i !== argsList.length - 1 && ', '}\n        </>\n    ))}\n</>\n\nconst AbiItem = ({abiItem}: { abiItem: AbiDefinition }) => {\n    if (abiItem.type === 'function') return (<AbiFunctionItem abiItem={abiItem as MethodAbi}/>)\n    if (abiItem.type === 'event') return (<AbiEventItem abiItem={abiItem as EventAbi}/>)\n\n    return (\n        <span className=\"abi-item-wrapper\">\n            <b>{abiItem.type}</b> {\"name\" in abiItem ? abiItem.name : ''}\n        </span>\n    );\n};\n\nconst AbiFunctionItem = ({abiItem}: { abiItem: MethodAbi }) => {\n    return (\n        <span className=\"abi-item-wrapper\">\n            <Type>{abiItem.type}</Type>\n            <Name> {abiItem.name}</Name>\n            (<ArgsList argsList={abiItem.inputs}/>)\n            {abiItem.constant ? ' view' : ''}\n            {abiItem.stateMutability && <Keyword> {abiItem.stateMutability}</Keyword>}\n            <Keyword>{' returns '}</Keyword>\n            (<ArgsList argsList={abiItem.outputs}/>)\n        </span>\n    );\n};\n\nconst AbiEventItem = ({abiItem}: { abiItem: EventAbi }) => {\n    return (\n        <span className=\"abi-item-wrapper\">\n            <Type>{abiItem.type}</Type>\n            <Name> {abiItem.name}</Name>\n            (<ArgsList argsList={abiItem.inputs}/>)\n        </span>\n    );\n};\n\nexport default AbiItem;\n","import Web3EthAbi from 'web3-eth-abi';\nimport {AbiDefinition, ContractAbi} from \"ethereum-types\";\n\nconst API_KEY = 'YourApiKeyToken';\n\nconst NULL_ADDRESS = '0x0000000000000000000000000000000000000000'\n\nexport const getAbi = async (address:string, network = 1):Promise<ContractAbi> => {\n    console.log(address);\n    const url = `https://api.etherscan.io/api?module=contract&action=getabi&address=${address}&apikey=${API_KEY}`\n    const res = await fetch(url);\n    const data = await res.json();\n    if (data.status !== '1') throw new Error(data.result);\n    const abi:ContractAbi = JSON.parse(data.result);\n    abi\n        .sort((a, b) => {\n            if ('name' in a && 'name' in b) return a.name.localeCompare(b.name)\n            return 0;\n        })\n        .sort((a, b) => b.type.localeCompare(a.type));\n    const implementation = await getImplementation(abi, address);\n    if (implementation && implementation !== NULL_ADDRESS) {\n        console.log(`  is proxy, fetching implementation at ${implementation}`);\n        await new Promise((res) => setTimeout(res, 5000));\n        return getAbi(implementation, network);\n    }\n    logAbi(abi);\n    return abi;\n}\n\nconst getImplementation = async (abi:ContractAbi, address:string) => {\n    try {\n        if (abi.filter((abiItem: AbiDefinition) => 'name' in abiItem && abiItem.name === 'implementation')) {\n            const EIP1967_IMPLEMENTATION_STORAGE = '0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc';\n            const res = await window.ethereum.request({\n                method: 'eth_getStorageAt',\n                params: [address, EIP1967_IMPLEMENTATION_STORAGE, 'latest'],\n            })\n            const implementation = `0x${res.substr(26)}`;\n            return implementation;\n        }\n    } catch (e) {\n        console.error(e);\n    }\n    return NULL_ADDRESS;\n}\n\nconst logAbi = (abi:ContractAbi) => {\n    const _abi:any[] = [];\n    abi.forEach((abiItem:any) => {\n        if (abiItem.type === 'function') {\n            const id = Web3EthAbi.encodeFunctionSignature(abiItem);\n            _abi.push({ ...abiItem, id });\n        } else {\n            _abi.push(abiItem);\n        }\n    });\n    console.log(_abi);\n}\n","type Network = 1 | 42 | 10 | 42161;\n\nconst BLOCK_EXPLORER_URL = {\n  1: 'https://etherscan.io/',\n  42: 'https://kovan.etherscan.io/',\n  10: 'https://optimistic.etherscan.io/',\n  42161: 'https://arbiscan.io/',\n};\n\nexport const getEtherscanLink = (hash:string, type = 'address', network:Network = 1) => `${BLOCK_EXPLORER_URL[network]}/${type}/${hash}`\n","import React, {useCallback, useRef, useState} from 'react';\nimport './App.scss';\nimport {useActionWithLoading} from \"../../utils/hooks\";\nimport {AbiDefinition, ContractAbi} from \"ethereum-types\";\nimport AbiItem from \"./AbiItem/AbiItem\";\nimport {getAbi} from \"../../utils/abi\";\nimport {getEtherscanLink} from \"../../utils/general\";\n\nfunction App() {\n    const inputEl = useRef<HTMLInputElement>(null);\n    const [abi, setAbi] = useState<ContractAbi>([]);\n    const [checks, setChecks] = useState<boolean[]>([]);\n\n    const {\n        action: submit, error, loading,\n    } = useActionWithLoading(async (network: number) => {\n        const address = inputEl.current?.value;\n        if (!address || !(new RegExp(/0x[0-9A-Za-z]{40}/)).test(address)) {\n            throw new Error('Invalid contract address');\n        }\n        const abi = await getAbi(address, network);\n        setAbi(abi);\n        setChecks((new Array(abi.length)).map(() => false));\n    })\n\n    const toggle = useCallback((i:number) => {\n        const _checks = [...checks];\n        _checks[i] = !_checks[i];\n        setChecks(_checks);\n    }, [checks]);\n\n    const toggleSpecial = useCallback((changer: Function) => () => {\n        const _checks = [...checks];\n        abi.forEach((abiItem, i) => changer(abiItem, _checks, i))\n        setChecks(_checks);\n    }, [abi, checks]);\n\n    const selectAll = toggleSpecial((abiItem:AbiDefinition, checks:boolean[], i:number) => checks[i] = true);\n    const deselectAll = toggleSpecial((abiItem:AbiDefinition, checks:boolean[], i:number) => checks[i] = false);\n    const selectAllFunctions = toggleSpecial((abiItem:AbiDefinition, checks:boolean[], i:number) => abiItem.type === 'function' && (checks[i] = true));\n\n    const copyAbi = useCallback(() => {\n        const _abi:any = [];\n        checks.forEach((checked, i) => {\n            if (checked) _abi.push(abi[i]);\n        });\n        navigator.clipboard.writeText(JSON.stringify(_abi));\n    }, [abi, checks])\n\n    return (\n        <div className=\"App\">\n            <div>\n                <input\n                    ref={inputEl}\n                    type=\"text\"\n                    size={42}\n                    placeholder=\"Contract address\"\n                    autoFocus\n                    // defaultValue=\"0x7d2768de32b0b80b7a3454c06bdac94a69ddc7a9\"\n                    // defaultValue=\"0xBB9bc244D798123fDe783fCc1C72d3Bb8C189413\"\n                />\n                <button onClick={() => submit(1)}>Fetch Mainnet ABI</button>\n                {loading && <span className=\"loader\">...</span>}\n                {error && <span className=\"error\">{error}</span>}\n            </div>\n            {abi.length > 0 && (\n                <>\n                    <div>\n                        <button onClick={selectAll}>Select All</button>\n                        <button onClick={deselectAll}>Deselect All</button>\n                        <button onClick={selectAllFunctions}>Select All Functions</button>\n                        <a href={getEtherscanLink(inputEl.current?.value || '')} target=\"_blank\">Etherscan</a>\n                        |\n                        <button onClick={() => copyAbi()}>Copy Filtered ABI</button>\n                    </div>\n                    <ul>\n                        {abi.map((abiItem, i) => (\n                            <li onClick={() => toggle(i)}>\n                                <input type=\"checkbox\" checked={checks[i]} />\n                                <AbiItem abiItem={abiItem} />\n                            </li>\n                        ))}\n                    </ul>\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n","import {useCallback, useState} from \"react\";\n\nexport const useActionWithLoading = (func:Function, deps = []) => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    const action = useCallback((...args:any[]) => {\n        setLoading(true);\n        setError('');\n        return func(...args)\n            .catch((err:Error) => setError(err.message))\n            .finally(() => setLoading(false));\n    }, [func, ...deps]);\n    return {\n        action,\n        loading,\n        error,\n    };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './components/App/App';\n\ndeclare global {\n    interface Window {\n        ethereum: any\n    }\n}\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}